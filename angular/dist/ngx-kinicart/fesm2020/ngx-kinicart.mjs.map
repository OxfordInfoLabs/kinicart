{"version":3,"file":"ngx-kinicart.mjs","sources":["../../../projects/ngx-kinicart/src/lib/components/top-up/top-up.component.ts","../../../projects/ngx-kinicart/src/lib/components/top-up/top-up.component.html","../../../projects/ngx-kinicart/src/lib/ngx-kinicart.module.ts","../../../projects/ngx-kinicart/src/lib/services/payment.service.ts","../../../projects/ngx-kinicart/src/lib/services/order.service.ts","../../../projects/ngx-kinicart/src/public-api.ts","../../../projects/ngx-kinicart/src/ngx-kinicart.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {PaymentService} from '../../services/payment.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'kc-top-up',\n    templateUrl: './top-up.component.html',\n    styleUrls: ['./top-up.component.css']\n})\nexport class TopUpComponent implements OnInit {\n\n    public topUpAmount: number;\n    public status: string;\n\n    constructor(private paymentService: PaymentService,\n                private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.params.subscribe(params => {\n            this.status = params.status || '';\n        });\n    }\n\n    public async topUp() {\n        if (this.topUpAmount >= 5) {\n            const lineItem = {\n                price_data: {\n                    currency: 'gbp',\n                    unit_amount: this.topUpAmount * 100,\n                    product_data: {\n                        name: 'Account Top Up'\n                    }\n                },\n                quantity: 1\n            };\n            const checkoutSession: string = await this.paymentService.getStripeCheckoutSessionURL(\n                [lineItem],\n                'payment',\n                window.location.href + '/cancel',\n                window.location.href + '/success',\n            );\n\n            window.location.href = checkoutSession;\n        } else {\n            window.alert('Please enter a top up amount greater than 5.');\n        }\n    }\n\n    public viewOrder() {\n\n    }\n\n}\n","<div class=\"space-y-6\">\n    <div *ngIf=\"status === 'cancel'\" class=\"shadow rounded-md bg-yellow-50 p-4\">\n        <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n                <!-- Heroicon name: mini/exclamation-triangle -->\n                <svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M8.485 3.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 3.495zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n            <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-yellow-800\">Checkout cancelled</h3>\n                <div class=\"mt-2 text-sm text-yellow-700\">\n                    <p>Top up was cancelled during checkout. Please proceed to payment to complete the top up.</p>\n                </div>\n            </div>\n            <div class=\"ml-auto pl-3\">\n                <div class=\"-mx-1.5 -my-1.5\">\n                    <button type=\"button\" (click)=\"status = ''\"\n                            class=\"inline-flex rounded-md bg-yellow-50 p-1.5 text-yellow-500 hover:bg-yellow-100 \">\n                        <span class=\"sr-only\">Dismiss</span>\n                        <!-- Heroicon name: mini/x-mark -->\n                        <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"status === 'success'\" class=\"shadow rounded-md bg-green-50 p-4\">\n        <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n                <!-- Heroicon name: mini/check-circle -->\n                <svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n            <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-green-800\">Top up completed</h3>\n                <div class=\"mt-2 text-sm text-green-700\">\n                    <p>Click view order to see the completed order.</p>\n                </div>\n                <div class=\"mt-4\">\n                    <div class=\"-mx-2 -my-1.5 flex\">\n                        <button type=\"button\" (click)=\"viewOrder()\"\n                                class=\"rounded-md bg-green-50 px-2 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100\">\n                            View order</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ml-auto pl-3\">\n                <div class=\"-mx-1.5 -my-1.5\">\n                    <button type=\"button\" (click)=\"status = ''\"\n                            class=\"inline-flex rounded-md bg-green-50 p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50\">\n                        <span class=\"sr-only\">Dismiss</span>\n                        <!-- Heroicon name: mini/x-mark -->\n                        <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"bg-white px-4 py-5 shadow sm:rounded-lg sm:p-6\">\n        <div class=\"md:grid md:grid-cols-3 md:gap-6\">\n            <div class=\"md:col-span-1\">\n                <h3 class=\"text-lg font-medium leading-6 text-gray-900\">Top Up</h3>\n                <p class=\"mt-1 text-sm text-gray-500\">Enter the amount you would like to add to your account.</p>\n            </div>\n            <div class=\"mt-5 space-y-6 md:col-span-2 md:mt-0\">\n                <div class=\"grid grid-cols-3 gap-6\">\n                    <div class=\"col-span-3 sm:col-span-2\">\n                        <label class=\"block text-sm font-medium text-gray-700\">Top Up Amount</label>\n                        <div class=\"mt-1 flex rounded-md shadow-sm\">\n                            <span\n                                class=\"inline-flex items-center rounded-l-md border border-r-0 border-gray-300 bg-gray-50 px-3 text-sm text-gray-500\">\n                                Â£</span>\n                            <input type=\"number\" [(ngModel)]=\"topUpAmount\"\n                                   class=\"block w-full flex-1 rounded-none rounded-r-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                                   placeholder=\"Enter amount\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"flex justify-end\">\n                    <button type=\"button\" class=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50\">\n                        Cancel</button>\n                    <button type=\"button\" (click)=\"topUp()\"\n                            class=\"ml-3 inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700\">\n                        Proceed to Payment</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {TopUpComponent} from './components/top-up/top-up.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n@NgModule({\n    declarations: [\n        TopUpComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserModule\n    ],\n    exports: [\n        TopUpComponent\n    ]\n})\nexport class NgxKinicartModule {\n    static forRoot(conf?: KinicartModuleConfig): ModuleWithProviders<NgxKinicartModule> {\n        return {\n            ngModule: NgxKinicartModule,\n            providers: [\n                {provide: KinicartModuleConfig, useValue: conf || {}}\n            ]\n        };\n    }\n}\n\nexport class KinicartModuleConfig {\n    guestHttpURL: string;\n    accessHttpURL: string;\n}\n","import { Injectable } from '@angular/core';\nimport { KinicartModuleConfig } from '../ngx-kinicart.module';\nimport {HttpClient} from '@angular/common/http';\n\ndeclare var window: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaymentService {\n\n    constructor(private config: KinicartModuleConfig,\n                private http: HttpClient) {\n    }\n\n    public getStripeCheckoutSessionURL(lineItems = [], mode = 'payment', cancelURL = '/cancel', successURL = '/success', currency = 'gbp'): Promise<string> {\n        return this.http.post(this.config.accessHttpURL + '/stripe/checkoutSession', {\n            lineItems, mode, cancelURL, successURL, currency\n        }).toPromise().then((sessionURL: string) => {\n            return sessionURL;\n        });\n    }\n\n    public removePaymentMethod(methodId, type) {\n        return this.http.get(this.config.accessHttpURL + '/payment/remove', {\n            params: { methodId, provider: type }\n        }).toPromise();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { KinicartModuleConfig } from '../ngx-kinicart.module';\nimport * as _ from 'lodash';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrderService {\n\n    constructor(private config: KinicartModuleConfig,\n                private http: HttpClient) {\n\n    }\n\n    public getOrders(searchTerm?, startDate?, endDate?) {\n        return this.http.post(this.config.accessHttpURL + '/order/orders',\n            _.pickBy({searchTerm, startDate, endDate}, _.identity));\n    }\n}\n","/*\n * Public API Surface of ngx-kinicart\n */\n\nexport * from './lib/services/payment.service';\nexport * from './lib/services/order.service';\n\nexport * from './lib/components/top-up/top-up.component';\n\nexport * from './lib/ngx-kinicart.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.PaymentService","i1.KinicartModuleConfig","i2"],"mappings":"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"}