import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/payment.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/cart.service";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/common";
import * as i6 from "../billing-address/billing-address.component";
export class TopUpComponent {
    constructor(paymentService, route, cartService) {
        this.paymentService = paymentService;
        this.route = route;
        this.cartService = cartService;
        this.amount = new EventEmitter();
    }
    ngOnInit() {
        this.route.params.subscribe(params => {
            this.status = params.status || '';
        });
    }
    async topUp() {
        if (this.topUpAmount >= 5) {
            await this.cartService.addTopUpCartItem(this.topUpAmount);
            const lineItem = {
                price_data: {
                    currency: 'gbp',
                    unit_amount: this.topUpAmount * 100,
                    product_data: {
                        name: 'Account Top Up'
                    }
                },
                quantity: 1
            };
            const checkoutSession = await this.paymentService.getStripeCheckoutSessionURL([lineItem], 'payment', window.location.origin + '/account/top-up/cancel', window.location.origin + '/account/top-up/success');
            window.location.href = checkoutSession;
        }
        else {
            window.alert('Please enter a top up amount greater than 5.');
        }
    }
    viewOrder() {
    }
}
TopUpComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TopUpComponent, deps: [{ token: i1.PaymentService }, { token: i2.ActivatedRoute }, { token: i3.CartService }], target: i0.ɵɵFactoryTarget.Component });
TopUpComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: TopUpComponent, selector: "kc-top-up", inputs: { topUpMessage: "topUpMessage", minAmount: "minAmount" }, outputs: { amount: "amount" }, ngImport: i0, template: "<div class=\"space-y-6\">\n    <div *ngIf=\"status === 'cancel'\" class=\"shadow rounded-md bg-yellow-50 p-4\">\n        <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n                <!-- Heroicon name: mini/exclamation-triangle -->\n                <svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M8.485 3.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 3.495zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n            <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-yellow-800\">Checkout cancelled</h3>\n                <div class=\"mt-2 text-sm text-yellow-700\">\n                    <p>Top up was cancelled during checkout. Please proceed to payment to complete the top up.</p>\n                </div>\n            </div>\n            <div class=\"ml-auto pl-3\">\n                <div class=\"-mx-1.5 -my-1.5\">\n                    <button type=\"button\" (click)=\"status = ''\"\n                            class=\"inline-flex rounded-md bg-yellow-50 p-1.5 text-yellow-500 hover:bg-yellow-100 \">\n                        <span class=\"sr-only\">Dismiss</span>\n                        <!-- Heroicon name: mini/x-mark -->\n                        <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"status === 'success'\" class=\"shadow rounded-md bg-green-50 p-4\">\n        <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n                <!-- Heroicon name: mini/check-circle -->\n                <svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n            <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-green-800\">Top up completed</h3>\n                <div class=\"mt-2 text-sm text-green-700\">\n                    <p>Click view order to see the completed order.</p>\n                </div>\n                <div class=\"mt-4\">\n                    <div class=\"-mx-2 -my-1.5 flex\">\n                        <button type=\"button\" (click)=\"viewOrder()\"\n                                class=\"rounded-md bg-green-50 px-2 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100\">\n                            View order</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ml-auto pl-3\">\n                <div class=\"-mx-1.5 -my-1.5\">\n                    <button type=\"button\" (click)=\"status = ''\"\n                            class=\"inline-flex rounded-md bg-green-50 p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50\">\n                        <span class=\"sr-only\">Dismiss</span>\n                        <!-- Heroicon name: mini/x-mark -->\n                        <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <kc-billing-address></kc-billing-address>\n    <div class=\"bg-white px-4 py-5 shadow sm:rounded-lg sm:p-6\">\n        <div class=\"md:grid md:grid-cols-3 md:gap-6\">\n            <div class=\"md:col-span-1\">\n                <h3 class=\"text-lg font-medium leading-6 text-gray-900\">Top Up</h3>\n                <p class=\"mt-1 text-sm text-gray-500\">Enter the amount you would like to add to your account.</p>\n            </div>\n            <div class=\"mt-5 space-y-6 md:col-span-2 md:mt-0\">\n                <div class=\"grid grid-cols-3 gap-6\">\n                    <div class=\"col-span-3 sm:col-span-2\">\n                        <label class=\"block text-sm font-medium text-gray-700\">Top Up Amount</label>\n                        <div class=\"mt-1 flex rounded-md shadow-sm\">\n                            <span\n                                class=\"inline-flex items-center rounded-l-md border border-r-0 border-gray-300 bg-gray-50 px-3 text-sm text-gray-500\">\n                                \u00A3</span>\n                            <input type=\"number\" [(ngModel)]=\"topUpAmount\" (ngModelChange)=\"amount.emit(topUpAmount)\"\n                                   class=\"block w-full flex-1 rounded-none rounded-r-md border-gray-300 sm:text-sm\"\n                                   placeholder=\"Enter amount\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"rounded-md bg-yellow-50 p-4\" *ngIf=\"topUpAmount && (minAmount && topUpAmount < minAmount)\">\n                    <div class=\"flex\">\n                        <div class=\"flex-shrink-0\">\n                            <!-- Heroicon name: mini/exclamation-triangle -->\n                            <svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                <path fill-rule=\"evenodd\" d=\"M8.485 3.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 3.495zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                            </svg>\n                        </div>\n                        <div class=\"ml-3\">\n                            <h3 class=\"text-sm font-medium text-yellow-800\">Attention needed</h3>\n                            <div class=\"mt-2 text-sm text-yellow-700\">\n                                <p>\n                                    Minimum top up of {{minAmount}} required.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <ng-template [ngIf]=\"topUpMessage\">\n                    <div class=\"rounded-md bg-blue-50 p-4\">\n                        <div class=\"flex\">\n                            <div class=\"flex-shrink-0\">\n                                <!-- Heroicon name: mini/information-circle -->\n                                <svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                    <path fill-rule=\"evenodd\" d=\"M19 10.5a8.5 8.5 0 11-17 0 8.5 8.5 0 0117 0zM8.25 9.75A.75.75 0 019 9h.253a1.75 1.75 0 011.709 2.13l-.46 2.066a.25.25 0 00.245.304H11a.75.75 0 010 1.5h-.253a1.75 1.75 0 01-1.709-2.13l.46-2.066a.25.25 0 00-.245-.304H9a.75.75 0 01-.75-.75zM10 7a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                                </svg>\n                            </div>\n                            <div class=\"ml-3 flex-1 md:flex md:justify-between\">\n                                <p class=\"text-sm text-blue-700\">\n                                    {{topUpMessage}}\n                                </p>\n\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n\n                <div class=\"flex justify-end\">\n                    <button type=\"button\" class=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50\">\n                        Cancel</button>\n                    <button type=\"button\" (click)=\"topUp()\" [disabled]=\"!topUpAmount || (minAmount && topUpAmount < minAmount)\"\n                            class=\"disabled:opacity-50 ml-3 inline-flex justify-center rounded-md border border-transparent bg-primary py-2 px-4 text-sm font-medium text-white shadow-sm\">\n                        Proceed to Payment</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [""], dependencies: [{ kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.BillingAddressComponent, selector: "kc-billing-address" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TopUpComponent, decorators: [{
            type: Component,
            args: [{ selector: 'kc-top-up', template: "<div class=\"space-y-6\">\n    <div *ngIf=\"status === 'cancel'\" class=\"shadow rounded-md bg-yellow-50 p-4\">\n        <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n                <!-- Heroicon name: mini/exclamation-triangle -->\n                <svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M8.485 3.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 3.495zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n            <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-yellow-800\">Checkout cancelled</h3>\n                <div class=\"mt-2 text-sm text-yellow-700\">\n                    <p>Top up was cancelled during checkout. Please proceed to payment to complete the top up.</p>\n                </div>\n            </div>\n            <div class=\"ml-auto pl-3\">\n                <div class=\"-mx-1.5 -my-1.5\">\n                    <button type=\"button\" (click)=\"status = ''\"\n                            class=\"inline-flex rounded-md bg-yellow-50 p-1.5 text-yellow-500 hover:bg-yellow-100 \">\n                        <span class=\"sr-only\">Dismiss</span>\n                        <!-- Heroicon name: mini/x-mark -->\n                        <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"status === 'success'\" class=\"shadow rounded-md bg-green-50 p-4\">\n        <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n                <!-- Heroicon name: mini/check-circle -->\n                <svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" />\n                </svg>\n            </div>\n            <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-green-800\">Top up completed</h3>\n                <div class=\"mt-2 text-sm text-green-700\">\n                    <p>Click view order to see the completed order.</p>\n                </div>\n                <div class=\"mt-4\">\n                    <div class=\"-mx-2 -my-1.5 flex\">\n                        <button type=\"button\" (click)=\"viewOrder()\"\n                                class=\"rounded-md bg-green-50 px-2 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100\">\n                            View order</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ml-auto pl-3\">\n                <div class=\"-mx-1.5 -my-1.5\">\n                    <button type=\"button\" (click)=\"status = ''\"\n                            class=\"inline-flex rounded-md bg-green-50 p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50\">\n                        <span class=\"sr-only\">Dismiss</span>\n                        <!-- Heroicon name: mini/x-mark -->\n                        <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <kc-billing-address></kc-billing-address>\n    <div class=\"bg-white px-4 py-5 shadow sm:rounded-lg sm:p-6\">\n        <div class=\"md:grid md:grid-cols-3 md:gap-6\">\n            <div class=\"md:col-span-1\">\n                <h3 class=\"text-lg font-medium leading-6 text-gray-900\">Top Up</h3>\n                <p class=\"mt-1 text-sm text-gray-500\">Enter the amount you would like to add to your account.</p>\n            </div>\n            <div class=\"mt-5 space-y-6 md:col-span-2 md:mt-0\">\n                <div class=\"grid grid-cols-3 gap-6\">\n                    <div class=\"col-span-3 sm:col-span-2\">\n                        <label class=\"block text-sm font-medium text-gray-700\">Top Up Amount</label>\n                        <div class=\"mt-1 flex rounded-md shadow-sm\">\n                            <span\n                                class=\"inline-flex items-center rounded-l-md border border-r-0 border-gray-300 bg-gray-50 px-3 text-sm text-gray-500\">\n                                \u00A3</span>\n                            <input type=\"number\" [(ngModel)]=\"topUpAmount\" (ngModelChange)=\"amount.emit(topUpAmount)\"\n                                   class=\"block w-full flex-1 rounded-none rounded-r-md border-gray-300 sm:text-sm\"\n                                   placeholder=\"Enter amount\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"rounded-md bg-yellow-50 p-4\" *ngIf=\"topUpAmount && (minAmount && topUpAmount < minAmount)\">\n                    <div class=\"flex\">\n                        <div class=\"flex-shrink-0\">\n                            <!-- Heroicon name: mini/exclamation-triangle -->\n                            <svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                <path fill-rule=\"evenodd\" d=\"M8.485 3.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 3.495zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                            </svg>\n                        </div>\n                        <div class=\"ml-3\">\n                            <h3 class=\"text-sm font-medium text-yellow-800\">Attention needed</h3>\n                            <div class=\"mt-2 text-sm text-yellow-700\">\n                                <p>\n                                    Minimum top up of {{minAmount}} required.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <ng-template [ngIf]=\"topUpMessage\">\n                    <div class=\"rounded-md bg-blue-50 p-4\">\n                        <div class=\"flex\">\n                            <div class=\"flex-shrink-0\">\n                                <!-- Heroicon name: mini/information-circle -->\n                                <svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                    <path fill-rule=\"evenodd\" d=\"M19 10.5a8.5 8.5 0 11-17 0 8.5 8.5 0 0117 0zM8.25 9.75A.75.75 0 019 9h.253a1.75 1.75 0 011.709 2.13l-.46 2.066a.25.25 0 00.245.304H11a.75.75 0 010 1.5h-.253a1.75 1.75 0 01-1.709-2.13l.46-2.066a.25.25 0 00-.245-.304H9a.75.75 0 01-.75-.75zM10 7a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                                </svg>\n                            </div>\n                            <div class=\"ml-3 flex-1 md:flex md:justify-between\">\n                                <p class=\"text-sm text-blue-700\">\n                                    {{topUpMessage}}\n                                </p>\n\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n\n                <div class=\"flex justify-end\">\n                    <button type=\"button\" class=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50\">\n                        Cancel</button>\n                    <button type=\"button\" (click)=\"topUp()\" [disabled]=\"!topUpAmount || (minAmount && topUpAmount < minAmount)\"\n                            class=\"disabled:opacity-50 ml-3 inline-flex justify-center rounded-md border border-transparent bg-primary py-2 px-4 text-sm font-medium text-white shadow-sm\">\n                        Proceed to Payment</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.PaymentService }, { type: i2.ActivatedRoute }, { type: i3.CartService }]; }, propDecorators: { topUpMessage: [{
                type: Input
            }], minAmount: [{
                type: Input
            }], amount: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,